//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BenfWaves.Library.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BenfWaves.Library.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] ExcelTemplate {
            get {
                object obj = ResourceManager.GetObject("ExcelTemplate", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #!/usr/bin/gnuplot -p
        ///# Generated by BenfWaves - http://code.google.com/p/benfwaves
        ///# Tested on gnuplot 4.4
        ///
        ///reset
        ///
        ///# Profile variables
        ///
        ///{TemplateProfile}
        ///
        ///# Plot data
        ///
        ///set title &apos;DSO Nano Waveform: &apos;.fileNumber
        ///set xlabel &apos;Time (relative to trigger)&apos;
        ///set ylabel &apos;Voltage&apos;
        ///set grid
        ///set style line 1 linetype 1 linecolor rgb &apos;blue&apos; linewidth 2 # Solid
        ///set style line 2 linetype 0 linecolor rgb &apos;red&apos;  linewidth 2 # Dotted
        ///
        ///if (triggerSens == 0) plot                             \
        ///    triggerLe [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GnuplotTemplate {
            get {
                return ResourceManager.GetString("GnuplotTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to % #!/usr/bin/octave --persist
        ///% Generated by BenfWaves - http://code.google.com/p/benfwaves
        ///% Tested on octave 3.2.4, Matlab 7.9.0 (R2009B)
        ///
        ///% Profile variables
        ///
        ///{TemplateProfile}
        ///
        ///% Data series
        ///
        ///voltages = [ ...
        ///{DataLines}
        ///];
        ///
        ///npoints = length(voltages);
        ///times = ((0:(npoints-1))&apos; + firstIndex - triggerIndex) / samplingFreq;
        ///endtimes = [times(1), times(end)];
        ///triglowpts = [triggerLow, triggerLow];
        ///trighighpts = [triggerHigh, triggerHigh];
        ///
        ///% Plot the data
        ///
        ///fname = [&apos;DSO Nano Waveform: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MatlabTemplate {
            get {
                return ResourceManager.GetString("MatlabTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to originalFile = &apos;{Profile.filename}&apos;;
        ///fileNumber   = &apos;{Profile.fileNumber}&apos;;
        ///firmware     = &apos;{Profile.firmware}&apos;;
        ///
        ///voltageDiv   = {Profile.voltageDivDouble};
        ///attenuation  = {Profile.attenuationDouble};
        ///vsens        = {Profile.vsensDouble};
        ///vdiffMax     = {Profile.vdiffMaxDouble};
        ///rin          = {Profile.rinDouble};
        ///
        ///timeDiv      = {Profile.timeDivDouble};
        ///timeRange    = {Profile.timeRangeDouble};
        ///sampleCount  = {Profile.sampleCount};
        ///firstIndex   = {FirstIndex};
        ///samplingFreq = sampleCount / tim [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TemplateProfile {
            get {
                return ResourceManager.GetString("TemplateProfile", resourceCulture);
            }
        }
    }
}
